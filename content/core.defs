(def documents (list))

(defn tag-attr [tag-name attrs & body] (str "<" tag-name " " attrs ">" (clojure.string/join body) "</" tag-name ">"))

(defn tag [tag-name & body] (str "<" tag-name ">" (clojure.string/join body) "</" tag-name ">"))

(defn link-to [href body] (tag-attr "a" (str "href=\"" href "\"") body))

(defn p [body] (str "<p>" body "</p>"))

(defn break [] "<br/><br/>")

(defn column-all [& body] (str "<tr><td colspan=\"2\">" (clojure.string/join body) "</td></tr>"))
(defn column-left [& body] (str "<tr><td>" (clojure.string/join body) "</td>"))
(defn column-right [& body] (str "<td>" (tag "pre" (clojure.string/join body)) "</td></tr>"))

(defn code-article [title & body]
  (list
    (tag "html"
      (tag "head" "<link rel=\"stylesheet\" href=\"publish.css\">")
      (tag "body" 
        (tag "header" (link-to "index.html" "a software craft")) 
        (tag "article" (tag "h1" title) (tag "table" (clojure.string/join body))))
    )
    title)
)

(defn doc-link [doc-data] (link-to (nth doc-data 0) (nth doc-data 1)))
(defn doc-index [doc-list] (->> doc-list (map doc-link) (clojure.string/join "<br/>")))

